{"ast":null,"code":"import { ADD_TASK, TOGGLE_TASK, SET_TASK_TEXT, FETCH_TASKS_FAILURE, FETCH_TASKS_REQUEST, FETCH_TASKS_SUCCESS, SET_BORDER_COLOR } from './actionTypes';\nlet nextTaskId = 0;\n\nconst fetchTasksRequest = () => ({\n  type: FETCH_TASKS_REQUEST\n});\n\nconst fetchTasksSuccess = data => ({\n  type: FETCH_TASKS_SUCCESS,\n  data\n});\n\nconst fetchTasksFailure = error => ({\n  type: FETCH_TASKS_FAILURE,\n  error\n}); //获取初始数据\n\n\nexport const fetchTasks = () => {\n  return dispatch => {\n    dispatch(fetchTasksRequest());\n    return fetch(\"./mock/task.json\").then(response => {\n      response.json().then(data => {\n        dispatch(fetchTasksSuccess(data));\n      });\n    }, error => {\n      dispatch(fetchTasksFailure(error));\n      console.log('An error occured:' + error);\n    });\n  };\n};\nexport const addTask = text => ({\n  type: ADD_TASK,\n  id: nextTaskId++,\n  text,\n  statusText\n});\nexport const toggleTask = id => ({\n  type: TOGGLE_TASK,\n  id,\n  statusText\n});\nexport const setTaskText = text => ({\n  type: SET_TASK_TEXT,\n  text\n});\nexport const setBorderColor = borderColor => ({\n  type: SET_BORDER_COLOR,\n  borderColor\n});","map":{"version":3,"sources":["F:/DataReachble/data-reachable/src/actions/index.js"],"names":["ADD_TASK","TOGGLE_TASK","SET_TASK_TEXT","FETCH_TASKS_FAILURE","FETCH_TASKS_REQUEST","FETCH_TASKS_SUCCESS","SET_BORDER_COLOR","nextTaskId","fetchTasksRequest","type","fetchTasksSuccess","data","fetchTasksFailure","error","fetchTasks","dispatch","fetch","then","response","json","console","log","addTask","text","id","statusText","toggleTask","setTaskText","setBorderColor","borderColor"],"mappings":"AAAA,SACEA,QADF,EACYC,WADZ,EACyBC,aADzB,EACwCC,mBADxC,EAC6DC,mBAD7D,EACkFC,mBADlF,EACuGC,gBADvG,QAEO,eAFP;AAIA,IAAIC,UAAU,GAAG,CAAjB;;AAEA,MAAMC,iBAAiB,GAAG,OAAO;AAC/BC,EAAAA,IAAI,EAAEL;AADyB,CAAP,CAA1B;;AAIA,MAAMM,iBAAiB,GAAIC,IAAD,KAAW;AACnCF,EAAAA,IAAI,EAAEJ,mBAD6B;AAEnCM,EAAAA;AAFmC,CAAX,CAA1B;;AAKA,MAAMC,iBAAiB,GAAIC,KAAD,KAAY;AACpCJ,EAAAA,IAAI,EAAEN,mBAD8B;AAEpCU,EAAAA;AAFoC,CAAZ,CAA1B,C,CAMA;;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACP,iBAAiB,EAAlB,CAAR;AACA,WAAOQ,KAAK,CAAC,kBAAD,CAAL,CAA0BC,IAA1B,CACLC,QAAQ,IAAI;AACVA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBN,IAAI,IAAI;AAC3BI,QAAAA,QAAQ,CAACL,iBAAiB,CAACC,IAAD,CAAlB,CAAR;AACD,OAFD;AAGD,KALI,EAMLE,KAAK,IAAI;AACPE,MAAAA,QAAQ,CAACH,iBAAiB,CAACC,KAAD,CAAlB,CAAR;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBR,KAAlC;AACD,KATI,CAAP;AAWD,GAbD;AAcD,CAfM;AAiBP,OAAO,MAAMS,OAAO,GAAIC,IAAD,KAAW;AAChCd,EAAAA,IAAI,EAAET,QAD0B;AAEhCwB,EAAAA,EAAE,EAAEjB,UAAU,EAFkB;AAGhCgB,EAAAA,IAHgC;AAIhCE,EAAAA;AAJgC,CAAX,CAAhB;AAOP,OAAO,MAAMC,UAAU,GAAGF,EAAE,KAAK;AAC/Bf,EAAAA,IAAI,EAAER,WADyB;AAE/BuB,EAAAA,EAF+B;AAG/BC,EAAAA;AAH+B,CAAL,CAArB;AAMP,OAAO,MAAME,WAAW,GAAGJ,IAAI,KAAK;AAClCd,EAAAA,IAAI,EAAEP,aAD4B;AAElCqB,EAAAA;AAFkC,CAAL,CAAxB;AAKP,OAAO,MAAMK,cAAc,GAAGC,WAAW,KAAK;AAC5CpB,EAAAA,IAAI,EAAEH,gBADsC;AAE5CuB,EAAAA;AAF4C,CAAL,CAAlC","sourcesContent":["import { \r\n  ADD_TASK, TOGGLE_TASK, SET_TASK_TEXT, FETCH_TASKS_FAILURE, FETCH_TASKS_REQUEST, FETCH_TASKS_SUCCESS, SET_BORDER_COLOR\r\n} from './actionTypes'\r\n\r\nlet nextTaskId = 0\r\n\r\nconst fetchTasksRequest = () => ({\r\n  type: FETCH_TASKS_REQUEST\r\n})\r\n\r\nconst fetchTasksSuccess = (data) => ({\r\n  type: FETCH_TASKS_SUCCESS,\r\n  data\r\n})\r\n\r\nconst fetchTasksFailure = (error) => ({\r\n  type: FETCH_TASKS_FAILURE,\r\n  error\r\n})\r\n\r\n\r\n//获取初始数据\r\nexport const fetchTasks = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchTasksRequest());\r\n    return fetch(\"./mock/task.json\").then(\r\n      response => {\r\n        response.json().then(data => {\r\n          dispatch(fetchTasksSuccess(data))\r\n        })\r\n      },\r\n      error => {\r\n        dispatch(fetchTasksFailure(error));\r\n        console.log('An error occured:' + error)\r\n      }\r\n    )\r\n  }\r\n}\r\n\r\nexport const addTask = (text) => ({\r\n  type: ADD_TASK,\r\n  id: nextTaskId++,\r\n  text,\r\n  statusText\r\n})\r\n\r\nexport const toggleTask = id => ({\r\n  type: TOGGLE_TASK,\r\n  id,\r\n  statusText\r\n})\r\n\r\nexport const setTaskText = text => ({\r\n  type: SET_TASK_TEXT,\r\n  text\r\n})\r\n\r\nexport const setBorderColor = borderColor => ({\r\n  type: SET_BORDER_COLOR,\r\n  borderColor\r\n})"]},"metadata":{},"sourceType":"module"}